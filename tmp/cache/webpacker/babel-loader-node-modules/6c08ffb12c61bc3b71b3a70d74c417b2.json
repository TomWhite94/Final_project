{"ast":null,"code":"import axios from 'axios';\nexport var SET_USER_ID = 'SET_USER_ID';\nexport var SET_USERNAME = 'SET_USERNAME';\nexport var IS_LOGGED_IN = 'IS_LOGGED_IN';\nexport var FETCH_LOGIN = 'FETCH_LOGIN';\nexport var setUserId = function setUserId(userId) {\n  return {\n    type: SET_USER_ID,\n    userId: userId\n  };\n};\nexport var setUsername = function setUsername(username) {\n  return {\n    type: SET_USERNAME,\n    username: username\n  };\n};\nexport var fetchLogin = function fetchLogin() {\n  return function (dispatch) {\n    axios.get('http://localhost:3000/logged_in', {\n      withCredentials: true\n    }).then(function (loginStatus) {\n      if (loginStatus.data.logged_in == true) {\n        dispatch({\n          type: IS_LOGGED_IN,\n          loginStatus: true\n        });\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/Users/flatironschool/Documents/Final_project/app/javascript/components/actions.js"],"names":["axios","SET_USER_ID","SET_USERNAME","IS_LOGGED_IN","FETCH_LOGIN","setUserId","userId","type","setUsername","username","fetchLogin","dispatch","get","withCredentials","then","loginStatus","data","logged_in"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,WAAW,GAAG,aAApB;AACP,OAAO,IAAMC,YAAY,GAAG,cAArB;AACP,OAAO,IAAMC,YAAY,GAAG,cAArB;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AAEP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD;AAAA,SAAa;AAClCC,IAAAA,IAAI,EAAEN,WAD4B;AAElCK,IAAAA,MAAM,EAANA;AAFkC,GAAb;AAAA,CAAlB;AAKP,OAAO,IAAME,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAAe;AACtCF,IAAAA,IAAI,EAAEL,YADgC;AAEtCO,IAAAA,QAAQ,EAARA;AAFsC,GAAf;AAAA,CAApB;AAKP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAC5B,SAAO,UAACC,QAAD,EAAc;AACjBX,IAAAA,KAAK,CAACY,GAAN,CAAU,iCAAV,EACA;AAACC,MAAAA,eAAe,EAAE;AAAlB,KADA,EAECC,IAFD,CAEM,UAAAC,WAAW,EAAI;AACjB,UAAIA,WAAW,CAACC,IAAZ,CAAiBC,SAAjB,IAA8B,IAAlC,EAAwC;AACxCN,QAAAA,QAAQ,CAAC;AAAEJ,UAAAA,IAAI,EAAEJ,YAAR;AAAsBY,UAAAA,WAAW,EAAE;AAAnC,SAAD,CAAR;AACH;AAAC,KALF;AAOH,GARD;AAUH,CAXM","sourcesContent":["import axios from 'axios'\n\nexport const SET_USER_ID = 'SET_USER_ID'\nexport const SET_USERNAME = 'SET_USERNAME'\nexport const IS_LOGGED_IN = 'IS_LOGGED_IN'\nexport const FETCH_LOGIN = 'FETCH_LOGIN'\n\nexport const setUserId = (userId) => ({\n    type: SET_USER_ID,\n    userId\n})\n\nexport const setUsername = (username) => ({\n    type: SET_USERNAME,\n    username\n})\n\nexport const fetchLogin = () => {\n    return (dispatch) => {\n        axios.get('http://localhost:3000/logged_in', \n        {withCredentials: true})\n        .then(loginStatus => {\n            if (loginStatus.data.logged_in == true) {\n            dispatch({ type: IS_LOGGED_IN, loginStatus: true })\n        }})\n        \n    }\n\n}"]},"metadata":{},"sourceType":"module"}