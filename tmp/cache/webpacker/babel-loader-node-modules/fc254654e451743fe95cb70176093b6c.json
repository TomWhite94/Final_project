{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _add_days = _interopRequireDefault(require(\"date-fns/add_days\"));\n\nvar _are_ranges_overlapping = _interopRequireDefault(require(\"date-fns/are_ranges_overlapping\"));\n\nvar _difference_in_calendar_days = _interopRequireDefault(require(\"date-fns/difference_in_calendar_days\"));\n\nvar _end_of_month = _interopRequireDefault(require(\"date-fns/end_of_month\"));\n\nvar _end_of_week = _interopRequireDefault(require(\"date-fns/end_of_week\"));\n\nvar _is_before = _interopRequireDefault(require(\"date-fns/is_before\"));\n\nvar _is_equal = _interopRequireDefault(require(\"date-fns/is_equal\"));\n\nvar _is_same_day = _interopRequireDefault(require(\"date-fns/is_same_day\"));\n\nvar _parse = _interopRequireDefault(require(\"date-fns/parse\"));\n\nvar _start_of_month = _interopRequireDefault(require(\"date-fns/start_of_month\"));\n\nvar _start_of_week = _interopRequireDefault(require(\"date-fns/start_of_week\"));\n\nvar _sub_days = _interopRequireDefault(require(\"date-fns/sub_days\"));\n\nvar _days_of_week = _interopRequireDefault(require(\"./days_of_week\"));\n\nvar _week = _interopRequireDefault(require(\"./week\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar RANGE_MODE = 'range'; // TODO: FC Rewrite\n\n/* eslint-disable react/require-optimization */\n\nvar Month = /*#__PURE__*/function (_Component) {\n  _inherits(Month, _Component);\n\n  var _super = _createSuper(Month);\n\n  function Month() {\n    var _this;\n\n    _classCallCheck(this, Month);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOnDayMouseEnter\", function (event) {\n      event.preventDefault();\n      var simpleReactCalendarDay = event.currentTarget.dataset.simpleReactCalendarDay;\n      var date = (0, _parse[\"default\"])(simpleReactCalendarDay);\n      var onDayMouseEnter = _this.props.onDayMouseEnter;\n\n      if (onDayMouseEnter) {\n        onDayMouseEnter(date);\n      } // TODO: simplify with FC approach, remove state logic from child components\n      //       this is passed from the parent component\n      // @ts-ignore\n\n\n      if (!_this._selectionInProgress) return;\n      var rangeLimit = _this.props.rangeLimit; // TODO: simplify with FC approach, remove state logic from child components\n      //       this is passed from the parent component\n      // @ts-ignore\n\n      var dateLimit = (0, _sub_days[\"default\"])(_this._selectionStart, rangeLimit);\n\n      var isDisabledWithin = _this._getDisabledRange({\n        // TODO: simplify with FC approach, remove state logic from child components\n        //       this is passed from the parent component\n        // @ts-ignore\n        end: !(0, _is_before[\"default\"])(_this._selectionStart, date) ? _this._selectionStart : date,\n        // TODO: simplify with FC approach, remove state logic from child components\n        //       this is passed from the parent component\n        // @ts-ignore\n        start: (0, _is_before[\"default\"])(_this._selectionStart, date) ? _this._selectionStart : date\n      });\n\n      if (!isDisabledWithin) return; // TODO: simplify with FC approach, remove state logic from child components\n      //       this is passed from the parent component\n      // @ts-ignore\n\n      if (!(0, _is_equal[\"default\"])(date, _this._selectionEnd)) {\n        if (!rangeLimit || rangeLimit && !(0, _is_before[\"default\"])(date, dateLimit)) {\n          // TODO: simplify with FC approach, remove state logic from child components\n          //       this is passed from the parent component\n          // @ts-ignore\n          _this._selectionEnd = date;\n\n          _this._pushUpdate();\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOnDayClick\", function (event) {\n      event.preventDefault();\n      var simpleReactCalendarDay = event.currentTarget.dataset.simpleReactCalendarDay;\n      var date = (0, _parse[\"default\"])(simpleReactCalendarDay);\n      var mode = _this.props.mode;\n\n      if (mode === RANGE_MODE) {\n        // TODO: simplify with FC approach, remove state logic from child components\n        //       this is passed from the parent component\n        // @ts-ignore\n        if (_this._selectionInProgress) {\n          var isDisabledWithin = _this._getDisabledRange({\n            // TODO: simplify with FC approach, remove state logic from child components\n            //       this is passed from the parent component\n            // @ts-ignore\n            end: !(0, _is_before[\"default\"])(_this._selectionStart, date) // @ts-ignore\n            ? _this._selectionStart : date,\n            // TODO: simplify with FC approach, remove state logic from child components\n            //       this is passed from the parent component\n            // @ts-ignore\n            start: (0, _is_before[\"default\"])(_this._selectionStart, date) // @ts-ignore\n            ? _this._selectionStart : date\n          });\n\n          if (!isDisabledWithin) {\n            // TODO: simplify with FC approach, remove state logic from child components\n            //       this is passed from the parent component\n            // @ts-ignore\n            _this._selectionInProgress = false; // TODO: simplify with FC approach, remove state logic from child components\n            //       this is passed from the parent component\n            // @ts-ignore\n\n            _this._selectionStart = null; // TODO: simplify with FC approach, remove state logic from child components\n            //       this is passed from the parent component\n            // @ts-ignore\n\n            _this._selectionEnd = null;\n\n            _this._pushUpdate();\n\n            _this._pushNoticeUpdate('overlapping_with_disabled');\n\n            return;\n          } // TODO: simplify with FC approach, remove state logic from child components\n          //       this is passed from the parent component\n          // @ts-ignore\n\n\n          _this._selectionInProgress = false; // TODO: simplify with FC approach, remove state logic from child components\n          //       this is passed from the parent component\n          // @ts-ignore\n\n          _this._selectionEnd = date;\n        } else {\n          // TODO: simplify with FC approach, remove state logic from child components\n          //       this is passed from the parent component\n          // @ts-ignore\n          _this._selectionInProgress = true; // TODO: simplify with FC approach, remove state logic from child components\n          //       this is passed from the parent component\n          // @ts-ignore\n\n          _this._selectionStart = date; // TODO: simplify with FC approach, remove state logic from child components\n          //       this is passed from the parent component\n          // @ts-ignore\n\n          _this._selectionEnd = date;\n        }\n      } else {\n        // TODO: simplify with FC approach, remove state logic from child components\n        //       this is passed from the parent component\n        // @ts-ignore\n        _this._selectionInProgress = false; // TODO: simplify with FC approach, remove state logic from child components\n        //       this is passed from the parent component\n        // @ts-ignore\n\n        _this._selectionStart = date; // TODO: simplify with FC approach, remove state logic from child components\n        //       this is passed from the parent component\n        // @ts-ignore\n\n        _this._selectionEnd = date;\n      }\n\n      _this._pushUpdate();\n\n      _this._pushNoticeUpdate(null);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOnDisabledDayClick\", function (event) {\n      var onNoticeChange = _this.props.onNoticeChange;\n      event.preventDefault();\n      onNoticeChange('disabled_day_click');\n    });\n\n    return _this;\n  }\n\n  _createClass(Month, [{\n    key: \"_pushUpdate\",\n    value: function _pushUpdate() {\n      var _this$props = this.props,\n          onChange = _this$props.onChange,\n          rangeLimit = _this$props.rangeLimit;\n      var end, start; // TODO: simplify with FC approach, remove state logic from child components\n      //       this is passed from the parent component\n      // @ts-ignore\n\n      if (this._selectionStart && this._selectionEnd) {\n        // TODO: simplify with FC approach, remove state logic from child components\n        //       this is passed from the parent component\n        // @ts-ignore\n        if ((0, _is_before[\"default\"])(this._selectionStart, this._selectionEnd)) {\n          // TODO: simplify with FC approach, remove state logic from child components\n          //       this is passed from the parent component\n          // @ts-ignore\n          start = this._selectionStart; // TODO: simplify with FC approach, remove state logic from child components\n          //       this is passed from the parent component\n          // @ts-ignore\n\n          end = this._selectionEnd;\n        } else {\n          // TODO: simplify with FC approach, remove state logic from child components\n          //       this is passed from the parent component\n          // @ts-ignore\n          start = this._selectionEnd; // TODO: simplify with FC approach, remove state logic from child components\n          //       this is passed from the parent component\n          // @ts-ignore\n\n          end = this._selectionStart;\n        }\n\n        if (rangeLimit && rangeLimit < (0, _difference_in_calendar_days[\"default\"])(end, start)) {\n          end = (0, _add_days[\"default\"])(start, rangeLimit);\n        }\n      }\n\n      return onChange({\n        end: end,\n        // TODO: simplify with FC approach, remove state logic from child components\n        //       this is passed from the parent component\n        // @ts-ignore\n        inProgress: this._selectionInProgress,\n        start: start\n      });\n    }\n  }, {\n    key: \"_getMinDate\",\n    value: function _getMinDate() {\n      var _this$props2 = this.props,\n          rangeLimit = _this$props2.rangeLimit,\n          minDate = _this$props2.minDate; // TODO: simplify with FC approach, remove state logic from child components\n      //       this is passed from the parent component\n      // @ts-ignore\n\n      var calcStartDate = (0, _sub_days[\"default\"])(this._selectionStart, rangeLimit);\n\n      if (minDate) {\n        var isCalcStartDayAfter = (0, _is_before[\"default\"])(minDate, calcStartDate);\n        return isCalcStartDayAfter ? calcStartDate : minDate;\n      }\n\n      return calcStartDate;\n    }\n  }, {\n    key: \"_pushNoticeUpdate\",\n    value: function _pushNoticeUpdate(noticeType) {\n      var onNoticeChange = this.props.onNoticeChange;\n      return onNoticeChange(noticeType);\n    }\n  }, {\n    key: \"_getDisabledRange\",\n    value: function _getDisabledRange(interval) {\n      var start = interval.start,\n          end = interval.end;\n      var disabledIntervals = this.props.disabledIntervals;\n      if (!disabledIntervals) return true;\n\n      for (var i = 0; i < disabledIntervals.length; i++) {\n        var _disabledIntervals$i = disabledIntervals[i],\n            intervalStart = _disabledIntervals$i.start,\n            intervalEnd = _disabledIntervals$i.end;\n\n        if ((0, _are_ranges_overlapping[\"default\"])(start, end, intervalStart, intervalEnd)) {\n          return;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"_getMaxDate\",\n    value: function _getMaxDate() {\n      var _this$props3 = this.props,\n          rangeLimit = _this$props3.rangeLimit,\n          maxDate = _this$props3.maxDate; // TODO: simplify with FC approach, remove state logic from child components\n      //       this is passed from the parent component\n      // @ts-ignore\n\n      var calcEndDate = (0, _add_days[\"default\"])(this._selectionStart, rangeLimit);\n\n      if (maxDate) {\n        var isCalcEndDayBefore = (0, _is_before[\"default\"])(calcEndDate, maxDate);\n        return isCalcEndDayBefore ? calcEndDate : maxDate;\n      }\n\n      return calcEndDate;\n    }\n  }, {\n    key: \"_renderDaysOfWeek\",\n    value: function _renderDaysOfWeek() {\n      var _this$props4 = this.props,\n          disableDaysOfWeek = _this$props4.disableDaysOfWeek,\n          blockClassName = _this$props4.blockClassName,\n          weekStartsOn = _this$props4.weekStartsOn,\n          daysOfWeek = _this$props4.daysOfWeek,\n          renderDaysOfWeek = _this$props4.renderDaysOfWeek,\n          renderDayOfWeek = _this$props4.renderDayOfWeek;\n      if (disableDaysOfWeek) return;\n      return /*#__PURE__*/_react[\"default\"].createElement(_days_of_week[\"default\"], {\n        blockClassName: blockClassName,\n        weekStartsOn: weekStartsOn,\n        daysOfWeek: daysOfWeek,\n        customRender: renderDaysOfWeek,\n        renderDayOfWeek: renderDayOfWeek\n      });\n    }\n  }, {\n    key: \"_renderWeeks\",\n    value: function _renderWeeks() {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          selectedMin = _this$props5.selectedMin,\n          selectedMax = _this$props5.selectedMax,\n          highlightedStart = _this$props5.highlightedStart,\n          highlightedEnd = _this$props5.highlightedEnd,\n          disabledIntervals = _this$props5.disabledIntervals,\n          activeMonth = _this$props5.activeMonth,\n          today = _this$props5.today,\n          blockClassName = _this$props5.blockClassName,\n          minNumberOfWeeks = _this$props5.minNumberOfWeeks,\n          rangeLimit = _this$props5.rangeLimit,\n          weekStartsOn = _this$props5.weekStartsOn,\n          renderDay = _this$props5.renderDay,\n          renderWeek = _this$props5.renderWeek,\n          getDayFormatted = _this$props5.getDayFormatted,\n          getISODate = _this$props5.getISODate;\n      var weeks = [];\n      var _this$props6 = this.props,\n          minDate = _this$props6.minDate,\n          maxDate = _this$props6.maxDate;\n      var date = (0, _start_of_week[\"default\"])((0, _start_of_month[\"default\"])(activeMonth), {\n        weekStartsOn: weekStartsOn\n      });\n      var end = (0, _end_of_week[\"default\"])((0, _end_of_month[\"default\"])(activeMonth), {\n        weekStartsOn: weekStartsOn\n      }); // TODO: simplify with FC approach, remove state logic from child components\n      //       this is passed from the parent component\n      // @ts-ignore\n\n      if (this._selectionInProgress && rangeLimit) {\n        minDate = this._getMinDate();\n        maxDate = this._getMaxDate();\n      }\n\n      while ( // TODO: External helper with weeknumber etc\n\n      /* eslint-disable no-unmodified-loop-condition */\n      typeof minNumberOfWeeks === 'number' && minNumberOfWeeks > weeks.length || (0, _is_before[\"default\"])(date, end) || (0, _is_same_day[\"default\"])(date, end)) {\n        weeks.push(date);\n        date = (0, _add_days[\"default\"])(date, 7);\n      }\n\n      return weeks.map(function (week) {\n        return /*#__PURE__*/_react[\"default\"].createElement(_week[\"default\"], {\n          activeMonth: activeMonth,\n          blockClassName: blockClassName,\n          customRender: renderWeek,\n          getDayFormatted: getDayFormatted,\n          date: week,\n          disabledIntervals: disabledIntervals,\n          highlightedEnd: highlightedEnd,\n          highlightedStart: highlightedStart,\n          key: week.getTime(),\n          maxDate: maxDate,\n          minDate: minDate,\n          onDayClick: _this2.handleOnDayClick,\n          onDayMouseEnter: _this2.handleOnDayMouseEnter,\n          onDisabledDayClick: _this2.handleOnDisabledDayClick,\n          renderDay: renderDay,\n          selectedMax: selectedMax,\n          selectedMin: selectedMin,\n          today: today,\n          weekStartsOn: weekStartsOn,\n          getISODate: getISODate\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props7 = this.props,\n          blockClassName = _this$props7.blockClassName,\n          customRender = _this$props7.customRender;\n\n      var children = /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, this._renderDaysOfWeek(), this._renderWeeks());\n\n      if (customRender) {\n        return customRender(_objectSpread(_objectSpread({}, this.props), {}, {\n          children: children\n        }));\n      }\n\n      return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"\".concat(blockClassName, \"-month\")\n      }, children);\n    }\n  }]);\n\n  return Month;\n}(_react.Component);\n\nexports[\"default\"] = Month;","map":null,"metadata":{},"sourceType":"module"}