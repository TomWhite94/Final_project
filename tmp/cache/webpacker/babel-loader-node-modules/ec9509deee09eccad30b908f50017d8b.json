{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport cx from 'classnames';\nimport React, { forwardRef } from 'react';\nimport ClearButton from './ClearButton';\nimport { withToken } from '../behaviors/token';\nimport { isFunction } from '../utils';\nvar InteractiveToken = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var active = _ref.active,\n      children = _ref.children,\n      className = _ref.className,\n      onRemove = _ref.onRemove,\n      tabIndex = _ref.tabIndex,\n      props = _objectWithoutPropertiesLoose(_ref, [\"active\", \"children\", \"className\", \"onRemove\", \"tabIndex\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, props, {\n    className: cx('rbt-token', 'rbt-token-removeable', {\n      'rbt-token-active': !!active\n    }, className),\n    ref: ref,\n    tabIndex: tabIndex || 0\n  }), children, /*#__PURE__*/React.createElement(ClearButton, {\n    className: \"rbt-token-remove-button\",\n    label: \"Remove\",\n    onClick: onRemove,\n    tabIndex: -1\n  }));\n});\n\nvar StaticToken = function StaticToken(_ref2) {\n  var children = _ref2.children,\n      className = _ref2.className,\n      disabled = _ref2.disabled,\n      href = _ref2.href;\n  var classnames = cx('rbt-token', {\n    'rbt-token-disabled': disabled\n  }, className);\n\n  if (href && !disabled) {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      className: classnames,\n      href: href\n    }, children);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classnames\n  }, children);\n};\n/**\n * Token\n *\n * Individual token component, generally displayed within the TokenizerInput\n * component, but can also be rendered on its own.\n */\n\n\nvar Token = /*#__PURE__*/forwardRef(function (props, ref) {\n  var disabled = props.disabled,\n      onRemove = props.onRemove,\n      readOnly = props.readOnly;\n  return !disabled && !readOnly && isFunction(onRemove) ? /*#__PURE__*/React.createElement(InteractiveToken, _extends({}, props, {\n    ref: ref\n  })) : /*#__PURE__*/React.createElement(StaticToken, props);\n});\nexport default withToken(Token);","map":null,"metadata":{},"sourceType":"module"}