{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Documents/Final_project/app/javascript/components/auth/Containers/LoginContainer.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React, { Component } from 'react';\nimport Login from '../Login';\nimport Registration from '../Registration';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nvar LoginContainer = /*#__PURE__*/function (_Component) {\n  _inherits(LoginContainer, _Component);\n\n  var _super = _createSuper(LoginContainer);\n\n  function LoginContainer() {\n    var _this;\n\n    _classCallCheck(this, LoginContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      showLogin: true\n    };\n\n    _this.toggleLogin = function () {\n      _this.setState(function (prevState) {\n        return {\n          showLogin: !prevState.showLogin\n        };\n      });\n    };\n\n    _this.handleToggle = function () {\n      if (_this.state.showLogin) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 20\n          }\n        }, /*#__PURE__*/React.createElement(Login, Object.assign({}, _this.props, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }\n        })));\n      }\n\n      if (!_this.state.showLogin) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 20\n          }\n        }, /*#__PURE__*/React.createElement(Registration, Object.assign({}, _this.props, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }\n        })));\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginContainer, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, this.handleToggle(), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: {\n          span: 6,\n          offset: 3\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"link\",\n        onClick: this.toggleLogin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }\n      }, this.state.showLogin ? \"Don't have an account? Click here to register\" : \"Already have an account? Click here to log in\"))));\n    }\n  }]);\n\n  return LoginContainer;\n}(Component);\n\nexport default LoginContainer;","map":{"version":3,"sources":["/Users/flatironschool/Documents/Final_project/app/javascript/components/auth/Containers/LoginContainer.js"],"names":["React","Component","Login","Registration","Button","Col","Row","LoginContainer","state","showLogin","toggleLogin","setState","prevState","handleToggle","props","span","offset"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;;IAEMC,c;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,SAAS,EAAE;AADP,K;;UAIRC,W,GAAc,YAAM;AAChB,YAAKC,QAAL,CAAc,UAAAC,SAAS;AAAA,eACnB;AAACH,UAAAA,SAAS,EAAE,CAACG,SAAS,CAACH;AAAvB,SADmB;AAAA,OAAvB;AAGH,K;;UAEDI,Y,GAAe,YAAM;AACjB,UAAI,MAAKL,KAAL,CAAWC,SAAf,EAA0B;AACtB,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACK,oBAAC,KAAD,oBAAW,MAAKK,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADL,CAAP;AAGH;;AACD,UAAI,CAAC,MAAKN,KAAL,CAAWC,SAAhB,EAA2B;AACvB,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACK,oBAAC,YAAD,oBAAkB,MAAKK,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADL,CAAP;AAGH;AACJ,K;;;;;;;6BAEQ;AACL,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKD,YAAL,EADL,eAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAEE,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,MAAM,EAAE;AAAnB,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,MAAhB;AAAuB,QAAA,OAAO,EAAE,KAAKN,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmD,KAAKF,KAAL,CAAWC,SAAX,GAAuB,+CAAvB,GAAuE,+CAA1H,CADJ,CADJ,CAFJ,CADJ;AAUH;;;;EApCwBR,S;;AAwC7B,eAAeM,cAAf","sourcesContent":["import React, { Component } from 'react'\nimport Login from '../Login'\nimport Registration from '../Registration'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\n\nclass LoginContainer extends Component {\n\n    state = {\n        showLogin: true,\n    }\n\n    toggleLogin = () => {\n        this.setState(prevState => (\n            {showLogin: !prevState.showLogin}\n        ))\n    }\n\n    handleToggle = () => {\n        if (this.state.showLogin) {\n            return <div>\n                        <Login {...this.props} />\n                    </div> \n        }\n        if (!this.state.showLogin) {\n            return <div>\n                        <Registration {...this.props} />\n                    </div>\n        }\n    }\n  \n    render() {\n        return(\n            <div>\n                {this.handleToggle()}\n                <Row>\n                    <Col md={{ span: 6, offset: 3 }}>\n                        <Button variant=\"link\" onClick={this.toggleLogin}>{this.state.showLogin ? \"Don't have an account? Click here to register\":\"Already have an account? Click here to log in\"}</Button>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n\n}\n\nexport default LoginContainer"]},"metadata":{},"sourceType":"module"}