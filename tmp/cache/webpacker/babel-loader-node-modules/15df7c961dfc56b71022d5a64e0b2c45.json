{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Documents/Final_project/app/javascript/components/Taskbar.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React, { Component } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\nimport { withRouter } from 'react-router-dom';\nvar ARTIST_SEARCH = \"https://api.songkick.com/api/3.0/search/artists.json?apikey=XyKG4KDNOliuaDev&per_page=5&page=1&query=\";\n\nvar Taskbar = /*#__PURE__*/function (_Component) {\n  _inherits(Taskbar, _Component);\n\n  var _super = _createSuper(Taskbar);\n\n  function Taskbar() {\n    var _this;\n\n    _classCallCheck(this, Taskbar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      artistSearchResult: [],\n      isSearching: false\n    };\n\n    _this.handleSearch = function (query) {\n      _this.setState({\n        isSearching: true\n      });\n\n      fetch(ARTIST_SEARCH + query).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        if (data.resultsPage.status == \"ok\" && data.resultsPage.results.hasOwnProperty(\"artist\")) {\n          _this.setState({\n            artistSearchResult: data.resultsPage.results.artist,\n            // page: data.resultsPage.page, \n            // numOfPages: Math.ceil(parseInt(data.resultsPage.totalEntries) / parseInt(data.resultsPage.perPage)),\n            isSearching: false\n          });\n        } else {\n          _this.setState({\n            artistSearchResult: [],\n            isSearching: false\n          });\n        }\n      });\n    };\n\n    _this.usernameBar = function () {\n      if (_this.props.loggedInStatus == true) {\n        return /*#__PURE__*/React.createElement(Nav, {\n          className: \"mr-auto\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Nav.Link, {\n          style: {\n            color: \"white\"\n          },\n          href: \"#Homepage\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }\n        }, _this.props.user.username));\n      } else {\n        /*#__PURE__*/\n        React.createElement(Nav, {\n          className: \"mr-auto\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Nav.Link, {\n          style: {\n            color: \"white\"\n          },\n          href: \"#Login\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }\n        }, \"Login\"));\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Taskbar, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // console.log(this.state.artistSearchResult)\n      return /*#__PURE__*/React.createElement(Navbar, {\n        bg: \"dark\",\n        expand: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n        style: {\n          color: \"white\"\n        },\n        href: \"#home\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, \"Gig Planner\"), /*#__PURE__*/React.createElement(Navbar.Toggle, {\n        \"aria-controls\": \"basic-navbar-nav\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Navbar.Collapse, {\n        id: \"basic-navbar-nav\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Nav, {\n        className: \"mr-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        style: {\n          color: \"white\"\n        },\n        href: \"#Login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }, \"Login\")), /*#__PURE__*/React.createElement(AsyncTypeahead, {\n        id: \"basic-typeahead-example\",\n        multiple: false,\n        isLoading: this.state.isSearching,\n        labelKey: \"displayName\",\n        onSearch: this.handleSearch,\n        options: this.state.artistSearchResult,\n        placeholder: \"Artist Search\",\n        onChange: function onChange(selected) {\n          selected.length && _this2.props.history.push(\"/artist/\".concat(selected[0].id));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      })));\n    }\n  }]);\n\n  return Taskbar;\n}(Component);\n\nexport default withRouter(Taskbar);","map":{"version":3,"sources":["/Users/flatironschool/Documents/Final_project/app/javascript/components/Taskbar.js"],"names":["React","Component","Navbar","Nav","NavDropdown","AsyncTypeahead","withRouter","ARTIST_SEARCH","Taskbar","state","artistSearchResult","isSearching","handleSearch","query","setState","fetch","then","response","json","data","resultsPage","status","results","hasOwnProperty","artist","usernameBar","props","loggedInStatus","color","user","username","selected","length","history","push","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport NavDropdown from 'react-bootstrap/NavDropdown'\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead'\nimport { withRouter } from 'react-router-dom'\n\n\nlet ARTIST_SEARCH = \"https://api.songkick.com/api/3.0/search/artists.json?apikey=XyKG4KDNOliuaDev&per_page=5&page=1&query=\"\n\nclass Taskbar extends Component {\n\n    state = {\n            artistSearchResult: [],\n            isSearching: false\n    }\n\n    handleSearch = query => { \n        this.setState({isSearching: true})\n        fetch(ARTIST_SEARCH + query)\n            .then(response => response.json())\n            .then(data => {\n                if (data.resultsPage.status == \"ok\" && data.resultsPage.results.hasOwnProperty(\"artist\")) {\n                    this.setState({\n                        artistSearchResult: data.resultsPage.results.artist, \n                        // page: data.resultsPage.page, \n                        // numOfPages: Math.ceil(parseInt(data.resultsPage.totalEntries) / parseInt(data.resultsPage.perPage)),\n                        isSearching: false,\n                        \n                    })\n                } else {\n                    this.setState({\n                        artistSearchResult: [],\n                        isSearching: false\n                    })\n                }\n\n            })\n    }\n\n    usernameBar = () => {\n        if (this.props.loggedInStatus == true) {\n            return  <Nav className=\"mr-auto\">\n                        <Nav.Link style={{color: \"white\"}} href=\"#Homepage\">{this.props.user.username}</Nav.Link>\n                    </Nav>\n        } else {\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link style={{color: \"white\"}} href=\"#Login\">Login</Nav.Link>\n                    </Nav>\n        }\n    }\n            \n\nrender() {\n    // console.log(this.state.artistSearchResult)\n    \n    return(\n        \n        <Navbar  bg=\"dark\" expand=\"lg\">\n            <Navbar.Brand style={{color: \"white\"}} href=\"#home\">Gig Planner</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Link style={{color: \"white\"}} href=\"#Login\">Login</Nav.Link>\n                </Nav>\n    \n                <AsyncTypeahead\n                        id=\"basic-typeahead-example\"\n                        multiple={false}\n                        isLoading={this.state.isSearching}\n                        labelKey=\"displayName\"\n                        onSearch={this.handleSearch}\n                        options={this.state.artistSearchResult}\n                        placeholder=\"Artist Search\"\n                        onChange={(selected) => {\n                            selected.length && this.props.history.push(`/artist/${selected[0].id}`)\n                        }}\n                    />\n                \n            </Navbar.Collapse>\n        </Navbar>\n   \n    \n            \n       \n        \n        \n    )\n}\n\n\n}\n\n\nexport default withRouter(Taskbar)"]},"metadata":{},"sourceType":"module"}